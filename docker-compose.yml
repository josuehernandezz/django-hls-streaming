services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    volumes:
      - ./django:/app
    env_file:
      - .env
    command: >
      bash -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn home.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    networks:
      - app_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A home worker --loglevel=info
    volumes:
      - ./django:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app_network

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: flixifi
      POSTGRES_USER: flixuser
      POSTGRES_PASSWORD: flixpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7
    container_name: redis_cache
    # volumes:
    #   - redis_data:/data
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./django:/app
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - static_volume:/app/django/collected_static
      # - ./media:/app/django/media/
    depends_on:
      - web
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  private_media_volume:
    driver: local

networks:
  app_network:
    driver: bridge